{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,uBACnCC,EAAWF,SAASC,cAAc,sBAClCE,EAAaH,SAASC,cAAc,wBAe1C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BT,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAG/D,SAASa,EAASJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BT,EAAAmB,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAhCzCN,SAASC,cAAc,yBAE/BoB,iBAAiB,SAE5B,SAA2BC,GACzBA,EAAMC,iBAEN,IADA,IAAIC,EAAeC,OAAO1B,EAAU2B,OAC3BC,EAAI,EAAGA,GAAKxB,EAAWuB,MAAOC,GAAK,EAC1CvB,EAAcuB,EAAGH,GAAcI,KAAKd,GAAWe,MAAMV,GACrDK,GAAgBC,OAAOvB,EAASwB,OA0BjBpB,EAxBPkB,EAyBVX,YAAW,WACTd,EAAU2B,MAAQ,GAClBxB,EAASwB,MAAQ,GACjBvB,EAAWuB,MAAQ,E,GAClBpB,GALL,IAAmBA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formDelay = document.querySelector('input[name=\"delay\"]');\nconst formStep = document.querySelector('input[name=\"step\"]');\nconst formAmount = document.querySelector('input[name=\"amount\"]');\nconst formButton = document.querySelector('button[type=\"submit\"]');\n\nformButton.addEventListener('click', clickedFormButton);\n\nfunction clickedFormButton(event) {\n  event.preventDefault();\n  let currentDelay = Number(formDelay.value);\n  for (let i = 1; i <= formAmount.value; i += 1) {\n    createPromise(i, currentDelay).then(onResolve).catch(onReject);\n    currentDelay += Number(formStep.value);\n  }\n  clearForm(currentDelay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onResolve({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction clearForm(delay) {\n  setTimeout(() => {\n    formDelay.value = '';\n    formStep.value = '';\n    formAmount.value = '';\n  }, delay);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formDelay","document","querySelector","$ce04d3a99e08e73b$var$formStep","$ce04d3a99e08e73b$var$formAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","event","preventDefault","currentDelay","Number","value","i","then","catch"],"version":3,"file":"03-promises.e1a043a2.js.map"}